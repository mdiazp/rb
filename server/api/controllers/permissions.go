package controllers

// Permission ...
type Permission string

// Permissions ...
type Permissions []Permission

const (
	// PermissionSession ...
	PermissionSession Permission = "Account"

	// PermissionCreateUser ...
	PermissionCreateUser Permission = "CreateUser"
	// PermissionRetrieveUser ...
	PermissionRetrieveUser Permission = "RetrieveUser"
	// PermissionUpdateUser ...
	PermissionUpdateUser Permission = "UpdateUser"
	// PermissionDeleteUser ...
	PermissionDeleteUser Permission = "DeleteUser"

	// PermissionCreateDisk ...
	PermissionCreateDisk Permission = "CreateDisk"
	// PermissionRetrieveDisk ...
	PermissionRetrieveDisk Permission = "RetrieveDisk"
	// PermissionUpdateDisk ...
	PermissionUpdateDisk Permission = "UpdateDisk"
	// PermissionDeleteDisk ...
	PermissionDeleteDisk Permission = "DeleteDisk"

	// PermissionCreateClient ...
	PermissionCreateClient Permission = "CreateClient"
	// PermissionRetrieveClient ...
	PermissionRetrieveClient Permission = "RetrieveClient"
	// PermissionUpdateClient ...
	PermissionUpdateClient Permission = "UpdateClient"
	// PermissionDeleteClient ...
	PermissionDeleteClient Permission = "DeleteClient"

	// PermissionCreatePDiskReservation ...
	PermissionCreatePDiskReservation Permission = "CreatePDiskReservation"
	// PermissionRetrievePDiskReservation ...
	PermissionRetrievePDiskReservation Permission = "RetrievePDiskReservation"
	// PermissionUpdatePDiskReservation ...
	PermissionUpdatePDiskReservation Permission = "UpdatePDiskReservation"
	// PermissionDeletePDiskReservation ...
	PermissionDeletePDiskReservation Permission = "DeletePDiskReservation"
	// PermissionFreeTurnsPDiskReservation ...
	PermissionFreeTurnsPDiskReservation Permission = "FreeTurnsPDiskReservation"

	// PermissionCreatePDiskCopy ...
	PermissionCreatePDiskCopy Permission = "CreatePDiskCopy"
	// PermissionRetrievePDiskCopy ...
	PermissionRetrievePDiskCopy Permission = "RetrievePDiskCopy"
	// PermissionUpdatePDiskCopy ...
	PermissionUpdatePDiskCopy Permission = "UpdatePDiskCopy"
	// PermissionDeletePDiskCopy ...
	PermissionDeletePDiskCopy Permission = "DeletePDiskCopy"

	// PermissionCreateMessenger ...
	PermissionCreateMessenger Permission = "CreateMessenger"
	// PermissionRetrieveMessenger ...
	PermissionRetrieveMessenger Permission = "RetrieveMessenger"
	// PermissionUpdateMessenger ...
	PermissionUpdateMessenger Permission = "UpdateMessenger"
	// PermissionDeleteMessenger ...
	PermissionDeleteMessenger Permission = "DeleteMessenger"

	// PermissionCreatePMessageForDR ...
	PermissionCreatePMessageForDR Permission = "CreatePMessageForDR"
	// PermissionRetrievePMessageForDR ...
	PermissionRetrievePMessageForDR Permission = "RetrievePMessageForDR"
	// PermissionUpdatePMessageForDR ...
	PermissionUpdatePMessageForDR Permission = "UpdatePMessageForDR"
	// PermissionDeletePMessageForDR ...
	PermissionDeletePMessageForDR Permission = "DeletePMessageForDR"
)

func addSessionPerms(ps *Permissions) {
	*ps = append(*ps, PermissionSession)
}
func addUserPerms(ps *Permissions) {
	*ps = append(*ps, PermissionCreateUser)
	*ps = append(*ps, PermissionRetrieveUser)
	*ps = append(*ps, PermissionUpdateUser)
	*ps = append(*ps, PermissionDeleteUser)
}
func readOnly(ps *Permissions) {
	*ps = append(*ps, PermissionRetrieveUser)
}
func all(ps *Permissions) {
	addSessionPerms(ps)
	addUserPerms(ps)
}

// Rol ...
type Rol string

const (
	// RolAdmin ...
	RolAdmin Rol = "Admin"
	// RolUser ...
	RolUser Rol = "User"
	// RolReadOnly ...
	RolReadOnly Rol = "ReadOnly"
)

// GetPermissions ...
func GetPermissions(rol Rol) Permissions {
	ps := &Permissions{}
	switch rol {
	case RolAdmin:
		all(ps)
	case RolUser:
		addSessionPerms(ps)
	case RolReadOnly:
		readOnly(ps)
	}
	return *ps
}
